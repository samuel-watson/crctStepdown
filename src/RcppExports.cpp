// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// qscore
double qscore(NumericVector& y, NumericVector& x, NumericVector& Tr, IntegerVector& cl, int ncl);
RcppExport SEXP _crctStepdown_qscore(SEXP ySEXP, SEXP xSEXP, SEXP TrSEXP, SEXP clSEXP, SEXP nclSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type Tr(TrSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type cl(clSEXP);
    Rcpp::traits::input_parameter< int >::type ncl(nclSEXP);
    rcpp_result_gen = Rcpp::wrap(qscore(y, x, Tr, cl, ncl));
    return rcpp_result_gen;
END_RCPP
}
// qscorew
double qscorew(const arma::vec& y, const arma::vec& x, const arma::mat& Tr, const arma::vec& g, const arma::mat& sigma, const arma::uvec& cl, arma::uword ncl);
RcppExport SEXP _crctStepdown_qscorew(SEXP ySEXP, SEXP xSEXP, SEXP TrSEXP, SEXP gSEXP, SEXP sigmaSEXP, SEXP clSEXP, SEXP nclSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Tr(TrSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type cl(clSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type ncl(nclSEXP);
    rcpp_result_gen = Rcpp::wrap(qscorew(y, x, Tr, g, sigma, cl, ncl));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_crctStepdown_qscore", (DL_FUNC) &_crctStepdown_qscore, 5},
    {"_crctStepdown_qscorew", (DL_FUNC) &_crctStepdown_qscorew, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_crctStepdown(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
